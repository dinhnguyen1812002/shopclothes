{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { API_URL } from '../../config';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import './loading.css';\n\n// function Login() {\n//     const isLoggedIn = localStorage.getItem('isLoggedIn');\n\n//     if (isLoggedIn) {\n//         window.location.href = '/';\n//     }\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [isLoading, setIsLoading] = useState(false);\n\n//     const handleLogin = async () => {\n//         try {\n//             if (username === '' || password === '') {\n//                 toast('Vui lòng nhập đầy đủ thông tin');\n//                 return;\n//             }\n//             if (password.length < 8) {\n//                 toast('Vui lòng nhập mật khẩu với ít nhất 8 kí tự');\n//                 return;\n//             }\n//             const response = await axios.post(`${API_URL}/api/users/login`, { username, password });\n\n//             if (response.status === 200) {\n//                 localStorage.setItem('user_id', response.data.user._id);\n//                 localStorage.setItem('username', response.data.user.username);\n//                 localStorage.setItem('firstname', response.data.user.firstname);\n//                 localStorage.setItem('lastname', response.data.user.lastname);\n//                 localStorage.setItem('email', response.data.user.email);\n//                 localStorage.setItem('address', response.data.user.address);\n//                 localStorage.setItem('phone', response.data.user.phone);\n//                 localStorage.setItem('role', response.data.roleName);\n//                 localStorage.setItem('isLoggedIn', true);\n//                 toast('Đăng nhập thành công');\n//                 window.location.href = '/';\n//             }\n//             else {\n//                 toast('Đăng nhập không thành công');\n//             }\n//         } catch (error) {\n//             toast(error.response.data.message);\n//         }\n//     }\n\n//     function sendOtp() {\n//         if (username) {\n//             axios.get(`${API_URL}/api/users/check_username/${username}`).then((response) => {\n//                 setIsLoading(true);\n//                 if (response.status === 200) {\n//                     const OTP = Math.floor(Math.random() * 9000 + 1000);\n//                     localStorage.setItem('otp', OTP);\n//                     localStorage.setItem('email_resetPass', response.data.email);\n//                     localStorage.setItem('username_resetPass', username);\n\n//                     axios.post(`${API_URL}/api/users/send_email`, {\n//                         OTP: OTP,\n//                         recipient_email: response.data.email,\n//                     }, {\n//                         headers: {\n//                             'Content-Type': \"application/json\",\n//                         },\n//                     })\n//                         .then(() => window.location.href = '/otpinput')\n//                         .catch((e) => alert(e.response.data.message));\n//                 } else {\n//                     alert(\"Người dùng có tên đăng nhập này không tồn tại!\");\n//                     console.log(response.data.message);\n//                 }\n//             })\n//             .catch((e) => alert(e.response.data.message));\n//         } else {\n//             setIsLoading(false);\n//             alert(\"Vui lòng nhập tên đăng nhập\");\n//         }\n//     }\n\n//     return (\n//         <>\n//             {\n//                 isLoading &&\n//                 <div class=\"loading\">Loading&#8230;</div>\n//             }\n//             <>\n//                 <main className=\"mainContent-theme \">\n//                     <div className=\"layout-account\">\n//                         <div className=\"container\">\n//                             <div className=\"row\">\n//                                 <div className=\"col-md-6 col-xs-12 wrapbox-heading-account\">\n//                                     <div className=\"header-page clearfix\">\n//                                         <h1>Đăng nhập</h1>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"col-md-6 col-xs-12 wrapbox-content-account\">\n//                                     <div id=\"customer-login\">\n//                                         <div id=\"login\" className=\"userbox\">\n//                                             <div className=\"clearfix large_form\">\n//                                                 <label htmlFor=\"customer_email\" className=\"icon-field\">\n//                                                     <i className=\"icon-login icon-envelope \" />\n//                                                 </label>\n//                                                 <input\n//                                                     required\n//                                                     type=\"text\"\n//                                                     name=\"customer[email]\"\n//                                                     id=\"customer_email\"\n//                                                     placeholder=\"Tên đăng nhập\"\n//                                                     className=\"text\"\n//                                                     value={username} onChange={e => setUsername(e.target.value)}\n//                                                 />\n//                                             </div>\n//                                             <div className=\"clearfix large_form\">\n//                                                 <label htmlFor=\"customer_password\" className=\"icon-field\">\n//                                                     <i className=\"icon-login icon-shield\" />\n//                                                 </label>\n//                                                 <input\n//                                                     required\n//                                                     type=\"password\"\n//                                                     name=\"customer[password]\"\n//                                                     id=\"customer_password\"\n//                                                     placeholder=\"Mật khẩu\"\n//                                                     className=\"text\"\n//                                                     size={16}\n//                                                     value={password} onChange={e => setPassword(e.target.value)}\n//                                                 />\n//                                             </div>\n//                                             <div className=\"clearfix action_account_custommer\">\n//                                                 <div className=\"action_bottom btn btn-outline-primary\">\n//                                                     <button\n//                                                         className=\"btn btn-signin\"\n//                                                         onClick={handleLogin}\n//                                                     >ĐĂNG NHẬP</button>\n//                                                 </div>\n//                                                 <div className=\"req_pass\">\n//                                                     <a\n//                                                         style={{ cursor: 'pointer' }} onClick={() => sendOtp()}\n//                                                     >\n//                                                         Quên mật khẩu?\n//                                                     </a>\n//                                                     <br />\n//                                                     hoặc{\" \"}\n//                                                     <a title=\"Đăng ký\" href=\"/register\">\n//                                                         Đăng ký\n//                                                     </a>\n//                                                 </div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </main>\n//                 <ToastContainer />\n//             </>\n//         </>\n//     )\n// }\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Worksplace/Visual code/Fullstack_Shop/shopclothing/client/src/components/pages/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { API_URL } from '../../config';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import './loading.css';\r\n\r\n// function Login() {\r\n//     const isLoggedIn = localStorage.getItem('isLoggedIn');\r\n\r\n//     if (isLoggedIn) {\r\n//         window.location.href = '/';\r\n//     }\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n\r\n//     const handleLogin = async () => {\r\n//         try {\r\n//             if (username === '' || password === '') {\r\n//                 toast('Vui lòng nhập đầy đủ thông tin');\r\n//                 return;\r\n//             }\r\n//             if (password.length < 8) {\r\n//                 toast('Vui lòng nhập mật khẩu với ít nhất 8 kí tự');\r\n//                 return;\r\n//             }\r\n//             const response = await axios.post(`${API_URL}/api/users/login`, { username, password });\r\n\r\n//             if (response.status === 200) {\r\n//                 localStorage.setItem('user_id', response.data.user._id);\r\n//                 localStorage.setItem('username', response.data.user.username);\r\n//                 localStorage.setItem('firstname', response.data.user.firstname);\r\n//                 localStorage.setItem('lastname', response.data.user.lastname);\r\n//                 localStorage.setItem('email', response.data.user.email);\r\n//                 localStorage.setItem('address', response.data.user.address);\r\n//                 localStorage.setItem('phone', response.data.user.phone);\r\n//                 localStorage.setItem('role', response.data.roleName);\r\n//                 localStorage.setItem('isLoggedIn', true);\r\n//                 toast('Đăng nhập thành công');\r\n//                 window.location.href = '/';\r\n//             }\r\n//             else {\r\n//                 toast('Đăng nhập không thành công');\r\n//             }\r\n//         } catch (error) {\r\n//             toast(error.response.data.message);\r\n//         }\r\n//     }\r\n\r\n//     function sendOtp() {\r\n//         if (username) {\r\n//             axios.get(`${API_URL}/api/users/check_username/${username}`).then((response) => {\r\n//                 setIsLoading(true);\r\n//                 if (response.status === 200) {\r\n//                     const OTP = Math.floor(Math.random() * 9000 + 1000);\r\n//                     localStorage.setItem('otp', OTP);\r\n//                     localStorage.setItem('email_resetPass', response.data.email);\r\n//                     localStorage.setItem('username_resetPass', username);\r\n\r\n//                     axios.post(`${API_URL}/api/users/send_email`, {\r\n//                         OTP: OTP,\r\n//                         recipient_email: response.data.email,\r\n//                     }, {\r\n//                         headers: {\r\n//                             'Content-Type': \"application/json\",\r\n//                         },\r\n//                     })\r\n//                         .then(() => window.location.href = '/otpinput')\r\n//                         .catch((e) => alert(e.response.data.message));\r\n//                 } else {\r\n//                     alert(\"Người dùng có tên đăng nhập này không tồn tại!\");\r\n//                     console.log(response.data.message);\r\n//                 }\r\n//             })\r\n//             .catch((e) => alert(e.response.data.message));\r\n//         } else {\r\n//             setIsLoading(false);\r\n//             alert(\"Vui lòng nhập tên đăng nhập\");\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             {\r\n//                 isLoading &&\r\n//                 <div class=\"loading\">Loading&#8230;</div>\r\n//             }\r\n//             <>\r\n//                 <main className=\"mainContent-theme \">\r\n//                     <div className=\"layout-account\">\r\n//                         <div className=\"container\">\r\n//                             <div className=\"row\">\r\n//                                 <div className=\"col-md-6 col-xs-12 wrapbox-heading-account\">\r\n//                                     <div className=\"header-page clearfix\">\r\n//                                         <h1>Đăng nhập</h1>\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-md-6 col-xs-12 wrapbox-content-account\">\r\n//                                     <div id=\"customer-login\">\r\n//                                         <div id=\"login\" className=\"userbox\">\r\n//                                             <div className=\"clearfix large_form\">\r\n//                                                 <label htmlFor=\"customer_email\" className=\"icon-field\">\r\n//                                                     <i className=\"icon-login icon-envelope \" />\r\n//                                                 </label>\r\n//                                                 <input\r\n//                                                     required\r\n//                                                     type=\"text\"\r\n//                                                     name=\"customer[email]\"\r\n//                                                     id=\"customer_email\"\r\n//                                                     placeholder=\"Tên đăng nhập\"\r\n//                                                     className=\"text\"\r\n//                                                     value={username} onChange={e => setUsername(e.target.value)}\r\n//                                                 />\r\n//                                             </div>\r\n//                                             <div className=\"clearfix large_form\">\r\n//                                                 <label htmlFor=\"customer_password\" className=\"icon-field\">\r\n//                                                     <i className=\"icon-login icon-shield\" />\r\n//                                                 </label>\r\n//                                                 <input\r\n//                                                     required\r\n//                                                     type=\"password\"\r\n//                                                     name=\"customer[password]\"\r\n//                                                     id=\"customer_password\"\r\n//                                                     placeholder=\"Mật khẩu\"\r\n//                                                     className=\"text\"\r\n//                                                     size={16}\r\n//                                                     value={password} onChange={e => setPassword(e.target.value)}\r\n//                                                 />\r\n//                                             </div>\r\n//                                             <div className=\"clearfix action_account_custommer\">\r\n//                                                 <div className=\"action_bottom btn btn-outline-primary\">\r\n//                                                     <button\r\n//                                                         className=\"btn btn-signin\"\r\n//                                                         onClick={handleLogin}\r\n//                                                     >ĐĂNG NHẬP</button>\r\n//                                                 </div>\r\n//                                                 <div className=\"req_pass\">\r\n//                                                     <a\r\n//                                                         style={{ cursor: 'pointer' }} onClick={() => sendOtp()}\r\n//                                                     >\r\n//                                                         Quên mật khẩu?\r\n//                                                     </a>\r\n//                                                     <br />\r\n//                                                     hoặc{\" \"}\r\n//                                                     <a title=\"Đăng ký\" href=\"/register\">\r\n//                                                         Đăng ký\r\n//                                                     </a>\r\n//                                                 </div>\r\n//                                             </div>\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </main>\r\n//                 <ToastContainer />\r\n//             </>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Login;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}